{"version":3,"sources":["components/User/User.tsx","components/Comment/Comment.tsx","components/CommentList/CommentList.tsx","components/Post/Post.tsx","components/PostList/PostList.tsx","components/api.ts","App.tsx","index.tsx"],"names":["User","user","name","email","address","city","street","zipcode","Comment","comment","body","CommentList","commentList","map","Fragment","key","id","className","Post","post","title","toUpperCase","substring","PostList","props","posts","loadPostsWithUsers","a","fetch","then","response","json","users","comments","find","userId","filter","postId","App","useState","isLoaded","setLoaded","isLoading","setIsLoading","setPosts","filteredPosts","setFilteredPosts","handleButtonClick","data","type","placeholder","onChange","event","value","target","toLowerCase","includes","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99e644be.chunk.js","sourcesContent":["import React from 'react';\nimport { UserProps } from '../types';\n\nexport const User: React.FC<UserProps> = ({ user }) => {\n  if (user) {\n    return (\n      <div>\n        <b>{user.name}</b>\n        <br />\n        <span>{user.email}</span>\n        <br />\n        <span>\n          {user.address.city}\n          ,\n          {user.address.street}\n          <i> st.</i>\n          <br />\n          {user.address.zipcode}\n        </span>\n      </div>\n    );\n  }\n\n  return <></>;\n};\n","import React from 'react';\nimport { CommentProps } from '../types';\n\nexport const Comment: React.FC<CommentProps> = ({ comment }) => (\n  <>\n    <b>{comment.name}</b>\n    <p>{comment.body}</p>\n    <i><span>{comment.email}</span></i>\n  </>\n);\n","import React from 'react';\nimport './CommentList.css';\nimport { Comment } from '../Comment/Comment';\nimport { CommentListProps } from '../types';\n\nexport const CommentList: React.FC<CommentListProps> = ({ commentList }) => (\n  <>\n    {commentList.map(comment => (\n      <React.Fragment key={comment.id}>\n        <div className=\"post__comment\">\n          <Comment\n            comment={comment}\n          />\n        </div>\n      </React.Fragment>\n    ))}\n  </>\n);\n","import React from 'react';\nimport { User } from '../User/User';\nimport { CommentList } from '../CommentList/CommentList';\nimport './Post.css';\nimport { PostProps } from '../types';\n\nexport const Post: React.FC<PostProps> = ({ post }) => {\n  const title = post.title[0].toUpperCase() + post.title.substring(1);\n\n  return (\n    <div className=\"test\">\n      <div className=\"posts__item\">\n        <h2>{title}</h2>\n        <p className=\"posts__text\">{post.body}</p>\n        <User user={post.user} />\n      </div>\n      <div className=\"post__comments\">\n        <CommentList commentList={post.commentList} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './PostList.css';\nimport { Post } from '../Post/Post';\nimport { PreparedPosts, Props } from '../types';\n\nexport const PostList: React.FC<Props> = (props) => {\n  const { posts } = props;\n\n  return (\n    <div className=\"posts\">\n      {posts.map((post: PreparedPosts) => (\n        <React.Fragment key={post.id}>\n          <div>\n            <Post post={post} />\n          </div>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n","import\n{\n  User,\n  Post,\n  CommentInteface,\n  PreparedPosts,\n} from './types';\n\nconst API_POSTS = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/posts.json';\nconst API_USERS = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/users.json';\nconst API_COMMENTS = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/comments.json';\n\nexport const loadPosts = (): Promise<Post[]> => (\n  fetch(API_POSTS).then(response => response.json())\n);\n\nexport const loadUsers = (): Promise<User[]> => (\n  fetch(API_USERS).then(response => response.json()));\n\nexport const loadComments = (): Promise<CommentInteface[]> => (\n  fetch(API_COMMENTS).then(response => response.json())\n);\n\nexport const loadPostsWithUsers = async (): Promise<PreparedPosts[]> => {\n  const posts = await loadPosts();\n  const users = await loadUsers();\n  const comments = await loadComments();\n\n  return posts.map(post => (\n    {\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      commentList: comments.filter(comment => comment.postId === post.id),\n    }\n  ));\n};\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport { PostList } from './components/PostList/PostList';\nimport { loadPostsWithUsers } from './components/api';\nimport { PreparedPosts } from './components/types';\n\nconst App: React.FC = () => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [posts, setPosts] = useState<PreparedPosts[]>([]);\n  const [filteredPosts, setFilteredPosts] = useState<PreparedPosts[]>([]);\n\n  const handleButtonClick = async () => {\n    setIsLoading(true);\n\n    await loadPostsWithUsers().then(data => {\n      setPosts(data);\n      setFilteredPosts(data);\n    });\n\n    setLoaded(true);\n  };\n\n  const handleQuery = (event: { target: { value: string }}) => {\n    const { value } = event.target;\n\n    setFilteredPosts(\n      [...posts].filter(post => (\n        post.title.toLowerCase().includes(value.toLowerCase())\n      || post.body.toLowerCase().includes(value.toLowerCase()))),\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>React dynamic list of Posts</h1>\n      <div>\n        {!isLoaded ? (\n          <>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              onClick={handleButtonClick}\n              disabled={isLoading}\n            >\n              {isLoading ? 'loading...' : 'Load'}\n            </button>\n          </>\n        ) : (\n          <>\n            <div>\n              <input\n                type=\"text\"\n                placeholder=\"search...\"\n                className=\"form-control form-control-lg\"\n                onChange={handleQuery}\n              />\n            </div>\n            <div className=\"content\">\n              <PostList posts={filteredPosts} />\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}